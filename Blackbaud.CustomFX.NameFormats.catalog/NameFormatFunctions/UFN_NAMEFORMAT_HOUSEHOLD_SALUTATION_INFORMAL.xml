<SQLFunctionSpec
	xmlns="bb_appfx_sqlfunction"
	xmlns:c="bb_appfx_commontypes"
	ID="5072b569-a048-4304-a1ec-204b837dc73a"
	Name="USR_UFN_NAMEFORMAT_HOUSEHOLD_SALUTATION_INFORMAL"
	Description="Custom Household Salutation Informal"
	Author="Nolan Regenwether"
	DBFunctionName="USR_UFN_NAMEFORMAT_HOUSEHOLD_SALUTATION_INFORMAL"
	IsNameFormatFunction="true"
	>

	<CreateFunctionSQL>
		<![CDATA[
create function dbo.USR_UFN_NAMEFORMAT_HOUSEHOLD_SALUTATION_INFORMAL
(
	@CONSTITUENTID uniqueidentifier,
	@LASTNAME nvarchar(100),
	@FIRSTNAME nvarchar(50),
	@MIDDLENAME nvarchar(50),
	@TITLE nvarchar(100),
	@SUFFIX nvarchar(100),
	@SPOUSELASTNAME nvarchar(100),
	@SPOUSEFIRSTNAME nvarchar(50),
	@SPOUSEMIDDLENAME nvarchar(50),
	@SPOUSETITLE nvarchar(100),
	@SPOUSESUFFIX nvarchar(100)
)
returns nvarchar(700)
with execute as caller
as begin
	declare @result nvarchar(700)
	set @result = ''
	declare @spouseid uniqueidentifier;
	SET @spouseid = null;
	SELECT @spouseid = dbo.USR_UFN_GETSPOUSEID(@CONSTITUENTID);

				

	-- Unmarried
	if @spouseid is null
	begin

		SELECT @result = dbo.USR_UFN_INDIVIDUAL_SALUTATION_INFORMAL( @CONSTITUENTID , @LASTNAME , @FIRSTNAME , @MIDDLENAME , @TITLE , @SUFFIX , @SPOUSELASTNAME , @SPOUSEFIRSTNAME , @SPOUSEMIDDLENAME , @SPOUSETITLE , @SPOUSESUFFIX  );

		return @result;
	end

	-- Married 
	if @spouseid is not null
	begin
		-- Find out the gender and  how special their title is in order to address them properly
		declare @gender int; 
		declare @spousegender int;
		SELECT @gender = dbo.USR_UFN_GETGENDER(@CONSTITUENTID);
		SELECT @spousegender = dbo.USR_UFN_GETGENDER(@spouseid);
		declare @conisprim bit;
		declare @spisprim bit;
		SET @conisprim = null;
		SET @spisprim = null;
		SELECT @conisprim = dbo.USR_UFN_ISPRIMARYHOUSEHOLDMEMBER(@CONSTITUENTID)
		SELECT @spisprim = dbo.USR_UFN_ISPRIMARYHOUSEHOLDMEMBER(@spouseid)
		
		declare @titleguid uniqueidentifier;
		declare @suffixguid uniqueidentifier;
		SET @titleguid = null; 
		SET @suffixguid = null; 
		SELECT @titleguid = dbo.USR_UFN_GETTITLEGUID(@TITLE)
		SELECT @suffixguid = dbo.USR_UFN_GETSUFFIXGUID(@SUFFIX)
		declare @spousetitleguid uniqueidentifier;
		declare @spousesuffixguid uniqueidentifier;
		SET @spousetitleguid = null; 
		SET @spousesuffixguid = null; 
		SELECT @spousetitleguid = dbo.USR_UFN_GETspousetitleGUID(@spousetitle)
		SELECT @spousesuffixguid = dbo.USR_UFN_GETspousesuffixGUID(@spousesuffix)
		
		
		if @gender = 0 AND @TITLEGUID IS NOT NULL
		begin
			SET @gender = dbo.USR_UFN_GETTITLEGENDER(@TITLEGUID)		
		end


		if @spousegender = 0 AND @SPOUSETITLEGUID IS NOT NULL
		begin
			SET @spousegender = dbo.USR_UFN_GETTITLEGENDER(@SPOUSETITLEGUID)				
		end
		
		
		if len(@spousefirstname) > 0 and len(@firstname) > 0
		begin
			if (dbo.USR_UFN_ISTITLERELIGIOUS(@TITLEGUID) = 1 AND dbo.USR_UFN_ISTITLERELIGIOUS(@SPOUSETITLEGUID) = 0) OR (dbo.USR_UFN_ISTITLERELIGIOUS(@TITLEGUID) = 1 AND dbo.USR_UFN_ISTITLERELIGIOUS(@SPOUSETITLEGUID) = 1 AND @FIRSTNAME = dbo.USR_UFN_SORTNAME(@FIRSTNAME, @SPOUSEFIRSTNAME, 0)  )
			begin
				set @result = @TITLE + N' ' + @FIRSTNAME + N' and ';
				if dbo.USR_UFN_ISTITLERELIGIOUS(@SPOUSETITLEGUID) = 1 
				begin
					set @result = @RESULT + @SPOUSETITLE + N' '
				end
				set @result = @RESULT + @SPOUSEFIRSTNAME; 
				return @result;
			end
			
			if (dbo.USR_UFN_ISTITLERELIGIOUS(@TITLEGUID) = 0 AND dbo.USR_UFN_ISTITLERELIGIOUS(@SPOUSETITLEGUID) = 1) OR (dbo.USR_UFN_ISTITLERELIGIOUS(@TITLEGUID) = 1 AND dbo.USR_UFN_ISTITLERELIGIOUS(@SPOUSETITLEGUID) = 1 AND @SPOUSEFIRSTNAME = dbo.USR_UFN_SORTNAME(@FIRSTNAME, @SPOUSEFIRSTNAME, 0)  )
			begin
				set @result = @SPOUSETITLE + N' ' + @SPOUSEFIRSTNAME + N' and ';
				if dbo.USR_UFN_ISTITLERELIGIOUS(@TITLEGUID) = 1
				begin
					SET @RESULT = @RESULT + @TITLE + N' '
				end
				SET @RESULT = @RESULT + @FIRSTNAME;  
				return @result;
			end
			
			if @spousegender = 1 AND @gender = 2
			begin
				return @firstname + N' and ' + @spousefirstname;
			end
			
			if @gender = 1 AND @spousegender = 2
			begin
				return @spousefirstname + N' and ' + @firstname;
			end
			if @conisprim = 1 AND @spisprim = 0
			begin
				return @firstname + N' and ' + @spousefirstname;
			end
			if @conisprim = 0 AND @spisprim = 1 
			begin
				return @spousefirstname + N' and ' + @firstname;
			end
			if @spousefirstname = dbo.USR_UFN_SORTNAME(@firstname, @spousefirstname, 0)
			begin
				return @spousefirstname + N' and ' + @FIRSTNAME;
			end
			else
			begin
				return @firstname + N' and ' + @spousefirstname;
			end
		end
		
		
		
			
		
	end
	
	
	if LOWER(@LASTNAME) <> LOWER(@SPOUSELASTNAME)
	begin
		SET @result = dbo.USR_UFN_SORTNAME(@LASTNAME, @SPOUSELASTNAME, 0) + N' and ' + dbo.USR_UFN_SORTNAME(@LASTNAME, @SPOUSELASTNAME, 1) + N' Household';
	end
	ELSE 
	begin
		SET @result =  @LASTNAME + N' Household';
	end
	return @result;
end
		]]>
	</CreateFunctionSQL>

</SQLFunctionSpec>
