<GlobalChangeSpec 
	xmlns="bb_appfx_globalchange"
	xmlns:c="bb_appfx_commontypes"
	ID="055bf496-553a-4593-8f5a-993c62dd02f1"
	Name="Custom Name Format - Replace Custom Name Formats With Formulas"
	Description="For Constituent Name Formats that are custom static text, generate all possible Name Format Formula options and, if one matches, replace the static text with the formula"
	Author="Mitchell Gibbs"
	DisplayName="Replace Custom Name Formats With Formulas Global Change"
	GlobalChangeFolder="CustomNameFormat\Admin"
	SPName="USR_USP_GLOBALCHANGE_REPLACECUSTOMNAMEFORMATSWITHFORMULAS"
>

	<!-- describe the SP that performs the global change operation -->
	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_GLOBALCHANGE_REPLACECUSTOMNAMEFORMATSWITHFORMULAS
(
	@CHANGEAGENTID uniqueidentifier = null,
	@ASOF as datetime = null,
	@NUMBERADDED int = 0 output,
	@NUMBEREDITED int = 0 output,
	@NUMBERDELETED int = 0 output,
	@SELECTIONID uniqueidentifier = null
)
as			
	set nocount off;
	
	declare @CURRENTDATE datetime
	set @CURRENTDATE = getdate();
	set @NUMBERADDED = 0;
	set @NUMBEREDITED = 0;
	set @NUMBERDELETED = 0; 
	
	if @CHANGEAGENTID is null
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;
					
	begin try
    --Drop temporary tables if they still exist from a previous run
    if object_id('tempdb..#Deciles') is not null
        drop table #Deciles;

    if object_id('tempdb..#NameFormatMaster') is not null
        drop table #NameFormatMaster;

    if object_id('tempdb..#MatchedNameFormats') is not null
        drop table #MatchedNameFormats;

    WITH cte_BuildDeciles
        AS
        (
	       SELECT 
		      c.LOOKUPID,
		      NTILE(10) OVER(ORDER BY LOOKUPID) as Decile
	       FROM
		      constituent c
	       WHERE 
          (@SELECTIONID IS NULL OR C.ID IN (select [ID] from dbo.[UFN_IDSETREADER_GETRESULTS_GUID](@SELECTIONID)))
		      AND C.ISCONSTITUENT = 1
		      AND C.ID IN (SELECT CONSTITUENTID FROM NAMEFORMAT WHERE CUSTOMNAME <> '')
		      AND C.ISORGANIZATION = 0
		      AND C.ISGROUP = 0
		      AND C.KEYNAME >= 'A'
		      AND C.FIRSTNAME >= 'A'
        )
    SELECT
        Decile,
        min(LOOKUPID) as MinLookupID,
        max(LOOKUPID) as MaxLookupID
    INTO #Deciles
    FROM
        cte_BuildDeciles
    GROUP BY
        Decile;

    --Create a cursor to allow splitting the script impact to impact 1% of the database at a time
    DECLARE c_DecileCounter CURSOR FOR
    SELECT Decile FROM #Deciles 
    ORDER BY Decile;

    DECLARE @Decile int
    DECLARE @DecileTop varchar(100)
    DECLARE @DecileBottom varchar(100)

    OPEN c_DecileCounter

    FETCH c_DecileCounter INTO @Decile

    WHILE @@Fetch_Status = 0
    BEGIN

    --Generate every possible name format for each constituent and store it in a temporary table
    SELECT
	    C.ID AS CONSTITUENT_ID,
	    NFF.ID AS NAMEFORMATID,
	    dbo.UFN_NAMEFORMAT_FROMID_INTERNAL(NFF.ID, C.ID,0) AS NAMEFORMAT,
	    NFF.SEQUENCE AS NFSEQ
    INTO #NameFormatMaster
	    FROM 
		    CONSTITUENT C
		    INNER JOIN #Deciles Deciles
		      ON C.LOOKUPID BETWEEN Deciles.MinLookupID and Deciles.MaxLookupID
		    CROSS JOIN NAMEFORMATFUNCTION NFF
	    WHERE
        (@SELECTIONID IS NULL OR C.ID IN (select [ID] from dbo.[UFN_IDSETREADER_GETRESULTS_GUID](@SELECTIONID)))
		    AND C.ISCONSTITUENT = 1
		    AND C.ID IN (SELECT CONSTITUENTID FROM NAMEFORMAT WHERE CUSTOMNAME <> '')
		    AND C.ISORGANIZATION = 0
		    AND C.ISGROUP = 0
		    AND Deciles.Decile = @Decile
		    AND dbo.UFN_NAMEFORMAT_FROMID_INTERNAL(NFF.ID, C.ID,0) <> '';

    --Match the generated name formats against the existing name formats where
    --the Custom format matches the result of a forumula
    SELECT
		    NAMEFORMAT.ID as NFID,
		    NameFormatMaster.*,
		    row_number() over (partition by NAMEFORMAT.ID order by NameFormatMaster.NFSEQ) as rn
    INTO #MatchedNameFormats
	    FROM
		    NAMEFORMAT
		    INNER JOIN #NameFormatMaster NameFormatMaster
			    ON NameFormatMaster.CONSTITUENT_ID = NAMEFORMAT.CONSTITUENTID AND NameFormatMaster.NAMEFORMAT = NAMEFORMAT.CUSTOMNAME;

    --Update NameFormats with the appropriate function and erase the CustomName where there
    --is an exact match. If there are multiple matches, use only the first in sequence
    UPDATE 
	    nameformat
    SET 
	    NAMEFORMATFUNCTIONID = MatchedNameFormats.NAMEFORMATID,
	    CUSTOMNAME = ''
    FROM
	    nameformat nf
	    INNER JOIN #MatchedNameFormats MatchedNameFormats
		    ON nf.ID = MatchedNameFormats.NFID
    WHERE
	    MatchedNameFormats.rn = 1;

    	SET @NUMBEREDITED = @NUMBEREDITED + @@ROWCOUNT

    if object_id('tempdb..#NameFormatMaster') is not null
        drop table #NameFormatMaster;

    if object_id('tempdb..#MatchedNameFormats') is not null
        drop table #MatchedNameFormats;

    FETCH c_DecileCounter INTO @Decile;

    END

    CLOSE c_DecileCounter;
    DEALLOCATE c_DecileCounter;
		
	end try
	
	begin catch
		exec dbo.USP_RAISE_ERROR;
		return 1;
	end catch
		]]>
	</CreateProcedureSQL>

  <ParametersFormMetaData>
    <FormMetaData xmlns="bb_appfx_commontypes">
      <FormFields>
        <FormField FieldID="SELECTIONID" DataType="Guid" Caption="Selection" CaptionResourceKey="$$selection">
          <SearchList SearchListID="98D0070E-C4A7-495B-A438-2AC12DA79068" EnableQuickFind="true">
            <FormFieldOverrides>
              <FormFieldOverride FieldID="RECORDTYPEID" Caption="Record type" ReadOnly="true" DefaultValueText="A40AADEC-85CE-4F5D-AA7B-DAC94ECFE28E" />
            </FormFieldOverrides>
          </SearchList>
        </FormField>
      </FormFields>
    </FormMetaData>
  </ParametersFormMetaData>

</GlobalChangeSpec>
